 Direct connect is a peer-to-peer file-sharing protocol. Direct connect clients connect to a central hub and can download files directly from one another.Hubs feature a list of clients or users connected to them. Users can search for files and download them from other clients, as well as chat with other users.HistoryNeoModus was started by Jonathan Hess in November, 1999 as a company funded by the adware "Direct Connect" while he was in high school . The first third-party client was called "DClite", which never fully supported the file sharing aspects of the protocol. Hess released a new version of Direct Connect, requiring a simple encryption key to initiate a connection, locking out third-party clients. The key was cracked, and the author of DClite released a new version of DClite compatible with the new software from NeoModus. Some time after, DClite was rewritten as Open Direct Connect with goals of having an MDI user interface and using plug-ins for file sharing protocols (similar to MLDonkey). Open Direct Connect also did not complete support for the full file sharing aspects of the protocol, but a port to Java did. Some time later, other clients such as DCTC (Direct Connect Text Client) and DC++ started popping up.ProtocolThe Direct connect protocol is a text-computer based protocol, where commands and their information is sent in clear text, without encryption. As clients connect to a central source of distribution (the hub) of information, the hub is required to have a substantial amount of upload bandwidth available. There is no official specification of the protocol. This means that every client and hub besides the original Neo-modus client and hub have been forced to reverse engineer the information. As such, any protocol specification this article may reference is likely either inaccurate and/or incomplete.The client-server (as well in client-client, where one act as "server") aspect of the protocol stipulates that the server speak first when a connection has been made. For example, when a client connect to a hub's socket, the hub is first to talk to the client.The protocol does not require a character encoding or font for clients or hubs.Port 411 is the default port for hubs, and 412 for client-to-client connections. If any of these ports are already in use, the next port is used. For example, if 411, 412 and 413 is in use, then port 414 will be used.Hub addresses are in the following form: dchub://example.com:411, where 411 is an optional port.There is no global identification scheme; users are identified with their nick-name on a hub-to-hub basis.An incoming request for a client-client connection cannot be linked with an actual connection.A search result cannot be linked with a particular search.Supported by the protocol is the ability to kick or move (redirect) a user to another hub. There is no restriction where a user might be redirected to. If a user is kicked, the hub isn't required to tell the specific reason as to why the user was kicked. However, if another client in power instructs the hub to kick, that client may send out a notification message before doing so. Redirecting a user must be accompanying with a reason. There is no HTTP referer equivalent.Hubs may send out user commands to clients. These commands are only raw protocol commands, and is mostly for making a particular task simpler. For example, the hub cannot send a user command that will trigger the default browser to visit a website. It can however add the command "+rules" (where '+' indicate to the hub that it's a command - this may vary) to display the hub's rules.The peer-to-peer part of the protocol is based around a concept of "slots" (similar to number of open positions for a job). These slots denote the number of people that are allowed to download from a user at any one time. These slots are controlled by the client.In client to client connections, the parties negotiate a random number to see who should be allowed to download first. The client with the highest number wins.Downloads are transported using TCP. Active searches use UDP. The connection to the hub is with TCP.There are two kinds of modes a user can be in, either "active" or "passive" mode. Clients using active mode can download from anyone else on the network. Clients using passive mode users can only download from active users. In NeoModus Direct Connect, passive mode users receive other passive mode users' search results, while the user will not be able to download anything. In DC++, users will not receive those search results. In NeoModus Direct Connect, all users will be sent at most five search results per query. If a user has searched, DC++ will respond with ten search results when the user is in active mode, or five, when the user is in passive mode. Passive clients will be sent search results through the hub, while active clients will receive the results directly.Protocol delimiters are '$', '|' and ' ' (space). There is no escape sequence, so these characters can't be sent without possibly compromising the integrity of the message. However, a workaround was devised in DC++: send the HTML equivalent if these characters are to be viewed by the user.Continued interest exists in features such as ratings and language packs. However, the authors of DC++ have been actively working on a complete replacement of the Direct connect protocol called Advanced Direct Connect.One example of an added feature to the protocol, in compared to the original protocol, is the broadcasting of Tiger-Tree Hashing of shared files (TTH). The advantages of this include verifying that a file is downloaded correctly, and the ability to find files independent of their names.HubsDirect connect hubs are central servers to which clients connect, thus the networks are not as de-centralised as Gnutella or FastTrack. Hubs provide information about the clients, as well as file searching and chat capabilities. File transfers are done directly between clients, in true peer-to-peer fashion.Hubs often have special areas of interest. Many have requirements on the total size of the files that their members share (share size), and restrictions on the content and quality of shares. A hub can have any arbitrary rule. Hubs can allow users to register and provide user authentication. It should be noted that the authentication is also in clear text. The hub may choose certain individiuals as operators (similar to IRC operators) to enforce said rules if the hub itself cannot.While not directly supported by the protocol, hub linking software exist. The software allow multiple hubs to be connected, allowing users to share and / or chat with people on the other linked hubs.Direct connect hubs have difficulty scaling, due to the broadcast-centricity of the protocol.Hub softwareHexhubHeXHub is an IOCP-based hub, written in Assembly, for Windows.Open Direct Connect HubOpen Direct Connect Hub is open source hub software for Unix/Linux.PtokaXPtokaX is hub software for Linux/FreeBSD/Windows.VerliHubVerlihub is an open source hub server that runs on Linux.YnHubYnHub (Yoshi and Nev Hub) is hub software for Windows. It is the successor to YHub (Yoshi Hub) and the hubsoft is written in Delphi.DConnect DaemonDCD open source software that runs on Linux/ *BSD/ Solaris/ Mac OS X/ Windows(cygwin)DDCH DevDirect Connect HubDDCH is open source hub software for Windows, written in VB6, DDCH support VBScript and JScript scripts.Client softwareWhile not mandated by the protocol, most clients send a "tag". This is part of the client's description and display information ranging from client name and version to number of total available slots to if the user is using a proxy server. It was originally added to DC++, due to its ability to be in multiple hubs with the same instance. The information is arbitrary.The original client's file list (a comprehensive list of the files a user share) was compressed using Huffman's compression algorithm. Newer clients (among them DC++) serve a XML based list, compressed with bzip2.DC++DC++ is an open source alternative to NMDC written in C++ mainly for Windows, but cross platform forks exist like LinuxDC++.MLDonkeyMLDonkey is an open source, free software multi-network peer-to-peer application. Originally a Linux client for the eDonkey protocol, it now runs on many flavors of Unix-like operating systems, Mac OS X, Windows and MorphOS and supports numerous peer-to-peer protocols.NeoModus Direct connectNeoModus Direct Connect (abbreviated to NMDC) was the original Direct connect client. It was written by Jonathan Hess at the company NeoModus. The first version was written in Visual Basic and released in November 1999. It only ran on Windows. The second version was written in C++ and C# and had Mac OS X support.ShakesPeerShakesPeer is a client specifically written for Mac OS X.Linux DC++LinuxDC++ is a port of DC++ to Linux. It has the same core with a rewritten user interface.ValknutValknut is a C++ and Qt written client that is designed to run on Linux, FreeBSD and Mac OS X.DCTCDirect Connect Text Client (DCTC) http://ac2i.homelinux.com/dctc/ for Linux. They also provide a GUI (dc_gui) for the client and a hub program (dchub).DC#DC# is a client primary for Linux that uses GTK+. It has as a goal to be as easy to use as possible.Hub linking softwareDirect Connect Hub linkDC-hublink is open source software for Windows that links hub chat, supporting all Direct Connect protocols. It supports the NeoModus Direct Connect-protocol (NMDC), Advanced Direct Connect-protocol (ADC), as well as the IRC-protocol (for making a connection to servers via Internet Relay Chat)HublistsDchublist.com NMDC and ADC hublist (about 7000 hubs for NMDC hublist, 30 for ADC hublist)DcList.ru after reset only few hubs, but over 10'000 users every day (here stats - renewing sometimes)Hubtracker.com first mixed NMDC/ADC hublist with ~1100 hubspublichublist.nl hublist with ~2200 hubshublist.ws hublist with ~ 2050 hubsRussian DC++ Hublist hublist with ~ 450 hubsDC++ International Hublist ~ hublist with ~ 100 hubs== Direct Connect used for DDoS attacks == As the protocol allow hubs to redirect users to another hub, malicious hubs have redirected users to other places than real Direct connect hubs, effectively causing a Distributed Denial of Service attack. As well, the hubs may alter the IP in client to client connections, pointing to a potential victim.   The CTM Exploit made its presence known during 2006-2007 it made the developers take security issues more seriously since the whole direct connect network suffered from DDoS attacks from this exploit. It's recommended for users to run later versions of hubsoft due to this exploit. Many Hublists have started to block insecure hubs, this message was posted by Dchublist.com Mon Apr 14, 2008IMPORTANT MESSAGE: There are still many hubs that are effected by the well known CTM exploit. As of next month we, along with other hublists, will be disabling these hubs from our active client lists. Please update your hubsofts to the latest versions to avoid this. Effected hubsofts are as follows: Verlihub-0.9.8c, Verlihub-0.9.8d-rc1, ynhub ==See also==Advanced Direct ConnectI2hubIRCReferencesExternal linksDirect Connect FAQProtocol documentation (docman)ADC SpecificationProtocol Documentation Wiki mirrorCategory:Direct Connect network Category:File sharing networkscs:Direct Connect de:Direct Connect es:Direct Connect fr:Direct Connect it:Direct Connect lt:Direct Connect hu:Direct connect nl:DirectConnect pl:Direct Connect pt:Direct Connect ru:Direct Connect sk:Direct Connect fi:Direct Connect sv:Direct Connect uk:Direct Connect