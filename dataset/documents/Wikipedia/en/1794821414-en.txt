 |kernel_type = Monolithic kernel |supported_platforms = Intel 8080, Intel 8085, Intel 8086, Motorola 68000, Zilog Z80 |working_state = Historic |latest_release_version = 3.1 |latest_release_date = 1982 |marketing_target = |prog_language = Assembler, BASIC, Modula-2, Pascal etc. |ui = Command line interface |license = Originally Proprietary, now BSD-like |website = Digital Research official CP/M page  CP/M (Control Program for Microcomputers) is an operating system originally created for Intel 8080/85 based microcomputers by Gary Kildall of Digital Research, Inc. Initially confined to single tasking on 8-bit processors and no more than 64 kilobytes (64 KiB) of memory, later versions of CP/M added multi-user variations, and were migrated to 16-bit processors.The combination of CP/M and S-100 bus computers patterned on the MITS Altair was an early "industry standard" for microcomputers, and was widely used through the late 1970s and into the mid-'80s. By greatly reducing the amount of programming required to install an application on a new manufacturer's computer, CP/M increased the market size for both hardware and software.Hardware modelA minimal 8-bit CP/M system would contain the following components:A computer terminal using the ASCII character setAn Intel 8080 (and later the 8085) microprocessorAt least 16 kilobytes of RAMA means to bootstrap the first sector of the diskette.At least one floppy disk drive.The only hardware system that CP/M, as sold by Digital Research, would support was the Intel 8080 Development System. Manufacturers of CP/M compatible systems customized portions of the operating system for their own combination of installed memory, disk drives, and console devices. CP/M would also run on systems based on the Zilog Z80 processor since the Z80 was able to execute 8080 code. While CP/M itself did not use any of the Z80-specific instructions, many applications were dedicated to Z80 based CP/M machines.On most machines the "bootstrap" was minimal bootloader in ROM, for others this bootstrap had to be entered into memory using front panel controls each time the system was started.Components of the operating systemIn the 8-bit versions, CP/M's software was separated into three componentsconsole command processor or CCP,basic disk operating system or BDOS, andbasic input/output system or BIOS.The CCP and BDOS were the same in all installations of a particular revision of CP/M, but the BIOS portion was always adapted to the particular hardware. Adding memory to a computer, for example, meant that the CP/M system had to be reinstalled. Once installed, the operating system was stored in reserved areas at the beginning of any disk which would be used to boot the system. On start-up, the bootloader would load the operating system from the disk in drive A:.By modern standards CP/M was primitive owing to the extreme constraints on program size. With version 1.0 there was no provision for detecting a changed disk. If a user changed disks without manually rereading the disk directory the system would write on the new disk using the old disk's directory information, ruining the data stored on the disk. Starting with 1.1 or 1.2 this danger was reduced: if one changed disks without reading the new disk's directory, and tried to write to it, the operating system would signal a fatal error, avoiding overwriting but requiring a reboot (which took no more than a few seconds, but losing whatever data you were trying to save).The majority of the complexity in CP/M was isolated in the BDOS, and to a lesser extent, the CCP. This meant that by porting the limited number of simple commands in the BIOS to a particular hardware platform, the entire OS would work. This significantly reduced the development time needed to support new machines, and was one of the main reasons for CP/M's widespread use. Today this sort of abstraction is common to most OSs, but at the time of CP/M's birth, OSs were typically intended to run on only one machine platform, and multilayer designs were considered unnecessary.===Command processor=== The Console Command Processor, or CCP, accepted input from the keyboard and conveyed results to the terminal. All CP/M commands had to be typed in on the "command line" — the console would show most often A and would await input from the user.CP/M's command line interface was patterned after the operating systems from Digital Equipment, such as RSTS/E for the PDP-11.Commands generally took the form of a keyword followed by a list of parameters separated by spaces or special characters. If an internal command was recognized, it was carried out by the CCP itself. Otherwise it would attempt to find an executable file on the currently logged disk drive and (in later versions) user area, load it, and pass it any additional parameters from the command line. These were referred to as "transient" programs. On completion, CP/M would reload the part of the CCP that had been overwritten by application programs — this allowed transient programs a larger memory space.The commands themselves could sometimes be obscure. For instance, the command to duplicate files was named PIP (Peripheral-Interchange-Program), the name of the old DEC utility used for that purpose. The format of parameters given to a program was not yet standardized, so that there was no single "option character" that differentiated options from file names (only the last version of CP/M included options in square brackets fairly consistently).Basic disk operating systemThe Basic Disk Operating System, or BDOS, provided access to such operations as opening a file, output to the console, or printing. Application programs would load processor registers with a function code for the operation, and addresses for parameters or memory buffers, and call a fixed address in memory. Since the address was the same independent of the amount of memory in the system, application programs would run the same way for any type or configuration of hardware.Basic input output systemThe Basic Input Output System, or BIOS, provided the lowest level functions required by the operating system. These included reading or writing single characters to the system consoles and reading or writing a sector of data from the disk. The BDOS handled some of the buffering of data from the diskette, but before CP/M 3.0 it assumed a fixed disk sector size of 128 Bytes, as used on single-density 8-inch floppy disks. Since most 5.25-inch disk formats used larger sectors, the blocking and deblocking and the management of a disk buffer area was handled by model-specific code in the BIOS.File systemFile names consisted of up to 8 characters, a period, then up to three characters as a file name extension (8.3 filename convention). The extension usually identified the type of the file. For example, .COM indicated a binary executable program file, and .TXT indicated a file containing ASCII text.File size was specified as the number of 128-byte records (directly corresponding to disk sectors on 8-inch drives) occupied by a file on the disk. There was no generally supported way of specifying byte-exact file sizes. The current size of a file was maintained in the file's file control block (FCB) by the operating system. Since many application programs (such as text editors) prefer to deal with files as sequences of characters rather than as sequences of records, by convention text files were terminated with a control-Z character (ASCII SUB, hexadecimal 1A). Determining the end of a text file therefore involved examining the last record of the file to locate the terminating control-Z. This also meant that inserting a control-Z character into the middle of a file usually had the effect of truncating the text contents of the file.File modification times (timestamps) were not supported, although some later variants of CP/M added this feature as an extension.CP/M 2.2 had no sub-directories in the file structure but provided 16 "user areas" to organize files on a disk. The user area concept was to make the single-user version of CP/M somewhat compatible with multi-user MP/M systems. A common patch for the CP/M and derivative operating systems was to make one user area accessible to the user independent of the currently set user area. A supported command was "USER x" where x is a value from 0 to 15. User 0 was the default. If one changed to another user, such as USER 1, the material saved on the disk for this user would only be available to USER 1; USER 2 would not be able to see it or access it. Since CP/M was a single-user operating system, no security was provided for the user command; nothing would prevent any user from accessing any of the 16 user areas. The user area feature arguably had little utility on small floppy disks, though it was more useful for organizing files on machines equipped with large hard drives.HistoryThe beginning and CP/M's heydayIn 1974 CP/M was a private project of Gary Kildall, under the name "Control Program/Monitor". During the conversion of CP/M to a commercial product, trademark registration documents filed in November 1977 gave the product's name as "Control Program for Microcomputers". The name shows a prevailing naming scheme of the time, as in Kildall's/Intel's PL/M (Programming Language for Microcomputers) and Prime Computer's PL/P (Programming Language for Prime), both suggesting IBM's PL/I; and IBM's CP/CMS operating system, which Kildall used when working at the Naval Postgraduate School, and which, like TOPS-10, has clear similarities to the CP/M user interface and file system.See www.khet.net for one opinion about a connection between CP/M and CP/CMS. As a CP/CMS user, Kildall would no doubt have seen this as a logical system name.This renaming of CP/M was part of a larger effort by Kildall and his business-partner wife to convert Kildall's personal project of CP/M and the Intel-contracted PL/M compiler into a commercial enterprise. The Kildalls astutely intended to establish the Digital Research brand and its product lines as synonymous with "microcomputer" in the consumer's mind, similar to what IBM and Microsoft together later successfully accomplished in making "personal computer" synonymous with IBM and Microsoft product offerings. Intergalactic Digital Research, Inc. was later renamed via a corporation change-of-name filing to Digital Research, Inc.CP/M used the 7-bit ASCII set. The other 128 characters made possible by the 8-bit byte were not standardized. For example, one Kaypro used them for Greek characters, and Osborne machines used the 8th bit set to indicate an underlined character. International CP/M systems most commonly used the ISO 646 norm for localized character sets, replacing certain ASCII characters with localized characters rather than adding them beyond the 7-bit boundary.While graphics-capable S100 systems existed from the commercialization of the S100 bus, CP/M did not provide any standardized graphics support until the release of CP/M 3.0 with GSX (Graphic System eXtension). Owing to the small memory available, graphics was never a common feature associated with 8-bit CP/M operating systems.While the 8-inch single density floppy disk format (so-called "distribution format") was standardized, various 5¼ inch formats were used depending on the characteristics of particular systems and to some degree the choices of the designers. No single manufacturer prevailed in the 5¼ inch era of CP/M use. A software manufacturer had to prepare a separate version of the program for each brand of hardware on which it was to run. With some manufacturers (Kaypro is an example), there was not even standardization across the company's different models. Because of this situation, disk format translation programs, which allowed a machine to read many different formats, became popular and reduced the confusion, as did programs like kermit which allowed transfer of data and programs from one machine to another using the serial ports that most CP/M machines had. The fragmented CP/M market, requiring distributors either to stock multiple formats of disks or to invest in multiformat duplication equipment, compared with the more standardized IBM PC disk formats, was a contributing factor to the rapid obsolescence of CP/M after 1981.CP/M was described as a "software bus", allowing multiple programs to interact with different hardware in a standardized way. Programs written for CP/M were typically portable between different machines, usually only requiring specification of the escape sequence for control of the screen and printer. This portability made CP/M popular, and much more software was written for CP/M than for operating systems that only ran on one brand of hardware. One restriction on portability was that certain programs used the extended instruction set of the Z80 processor and would not operate on an 8080 or 8085 processor.Many different brands of machines ran CP/M, some notable examples being the Altair, the IMSAI 8080, the Osborne 1 and Kaypro portables, MSX, and even the Apple II when an extra Z80-card was installed. The best selling CP/M capable system of all time was probably the Commodore 128, although few people actually used its CP/M abilities. In the UK, CP/M was also available for the BBC Micro when equipped with a Z80 co-processor. Furthermore, it powered the popular Amstrad PCW word-processing system and was available for the Amstrad CPC series and later models of the ZX Spectrum.WordStar, one of the first widely used word processors, and dBASE, an early and popular database program for small computers, were originally written for CP/M. An early outliner, KAMAS (Knowledge and Mind Amplification System) was also written for CP/M, though later rewritten for MS-DOS. Turbo Pascal, the ancestor of Borland Delphi, and Multiplan, the ancestor of Microsoft Excel, also debuted on CP/M before MS-DOS versions became available. Various character or text-based games were written. Lifeboat Associates started collecting and distributing user-written "free" software. One of the first was XMODEM, which allowed communication via modem and phone line.The 16-bit worldVersions of CP/M were later completed for some 16-bit CPUs as well, although they required the application programs to be re-compiled for the new CPUs -- or, if they were written in assembly language, to be largely rewritten from scratch.One of the first was CP/M-86 for the Intel 8086, which was soon followed by CP/M-68k for the Motorola 68000. At this point the original 8-bit CP/M became known by the retronym CP/M-80 to avoid confusion. There was also a port to the Zilog Z8000, named CP/M-8000http://www.cpm.z80.de/source.html.CP/M-68k was initially used in the Atari ST computer, but Atari decided to go with a newer DOS called GEMDOS. It also was used on the SORD M68 and M68MX computers. CP/M-86 was expected to be the standard operating system of the new IBM PCs, but DRI and IBM were unable to negotiate development and licensing terms. IBM turned to Microsoft instead, and Microsoft delivered PC-DOS based on a CP/M "clone," 86-DOS. Although CP/M-86 became an option for the IBM PC after DRI threatened legal action, it never overtook Microsoft's system.When Digital Equipment Corporation put out the Rainbow 100 to compete with IBM, it came with CP/M-80 using a Z80 chip, and CP/M-86 or MS-DOS using an 8088 microprocessor. The Z80 and 8088 CPUs ran concurrently. A benefit of the Rainbow was that it could continue to run 8-bit CP/M software as users moved into the 16-bit world of MS-DOS.MS-DOS takes overThe first version of MS-DOS had some resemblance to CP/M-86, but rapidly diverged after the first release. Many of the basic concepts and internal mechanisms of early versions of MS-DOS resembled those of CP/M. Internals like file-handling data structures were identical, and both referred to disk drives with a letter (A:, B:, etc.). The main innovation was MS-DOS's FAT file system. This intentional similarity made it easier to port popular CP/M software like WordStar and dBase. However, CP/M's concept of separate user areas for files on the same disk was never ported to MS-DOS. Since MS-DOS had access to more memory (as few IBM PCs were sold with less than 64 KB of memory, while CP/M had to run in 16 KB if necessary), more commands were built in to the command-line user interface logic, making MS-DOS somewhat faster and easier to use on floppy-based computers.CP/M rapidly lost market share as the microcomputing market moved to the PC platform, and it never regained its former popularity. Byte Magazine, at the time one of the leading industry magazines for microcomputers, essentially ceased covering CP/M products within a few years of the introduction of the IBM PC. For example, in 1983 there were still a few advertisements for S100 boards and articles on CP/M software, but by 1987 these were no longer found in the magazine.Later versions of CP/M-86 made significant strides in performance and usability and were made compatible with MS-DOS. For some time in the 1980s, the resulting system was considered to be a better x86 OS than MS-DOS. To reflect this compatibility the name was changed, and CP/M-86 became DOS Plus, which in turn became DR-DOS.ZCPRZCPR (the Z80 Command Processor Replacement) was introduced on February 2, 1982 as a drop-in replacement for the standard Digital Research command processor (CCP) and was initially written by a group of computer hobbyists who called themselves "The CCP Group". They were Frank Wancho, Keith Petersen (the archivist behind Simtel at the time), Ron Fowler, Charlie Strom, Bob Mathias, and Richard Conn. Richard was, in fact, the driving force in this group (all of whom maintained contact through email).ZCPR1 was released on a disk put out by SIG/M (Special Interest Group/Microcomputers), a part of the Amateur Computer Club of New Jersey.ZCPR2 was released on February 14, 1983. It was released as a set of ten disks from SIG/M. ZCPR2 was upgraded to 2.3, and also was released in 8080 code, permitting the use of ZCPR2 on 8080 and 8085 systems.ZCPR3 was released on Bastille Day, July 14, 1984, as a set of nine disks from SIG/M. The code for ZCPR3 could also be compiled (with reduced features) for the 8080 and would run on systems that did not have the requisite Z80 microprocessor.In January 1987, Richard Conn decided to stop developing ZCPR, and Echelon asked Jay Sage (who already had a privately enhanced ZCPR 3.1) to continue work on ZCPR. Thus, ZCPR 3.3 was developed and released. ZCPR33 no longer supported the 8080 series of microprocessors, and added the most features of any upgrade in the ZCPR line.Features of ZCPR as of version 3 included:shellsaliasesI/O redirectionflow controlnamed directoriessearch pathscustom menuspasswordson line helpZCPR3.3 also included a full complement of utilities with considerably extended capabilities. While enthusiastically supported by the CP/M user base of the time, ZCPR alone was insufficient to slow the demise of CP/M.Further readingZCPR3, The Manual by Richard Conn: ISBN 0918432596comp.os.cpm FAQ (also present at this Digital Research related site)Z-System Corner: Tenth Anniversary of ZCPR - part of The Computer Journal, issue 54See alsoList of machines running CP/MMP/MMultiuser DOSReferences Zaks, Rodnay (1980). The CP/M Handbook With MP/M. SYBEX Inc. ISBN 0-89588-048-2.External linksDigital Research official CP/M pageHistory/Development and Demise of CP/M &ndash; A PowerPoint (PPT) presentationThe origin of CP/M's nameCP/M Main Page - Technical information siteCP/M InternalsThe Unofficial CP/M Web siteCP/M-86 Resource ArchiveTriumph of the Nerds - This PBS series includes the details of IBM's choice of Microsoft DOS over Digital Research's CP/M for the IBM PCGaby's Homepage for CP/M and Computer History - includes ZCPR materials*CP/M Cp/m Category:Digital Research Category:Disk operating systemsbs:CP/M cs:CP/M da:CP/M de:CP/M es:CP/M fr:CP/M ko:CP/M hr:CP/M ia:CP/M it:CP/M he:CP/M hu:CP/M nl:CP/M ja:CP/M no:CP/M pl:CP/M pt:CP/M ru:CP/M simple:CP/M sr:CP/M fi:CP/M sv:CP/M th:CP/M tr:CP/M zh:CP/M