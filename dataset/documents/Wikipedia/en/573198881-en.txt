A plug-in (plugin, addin, add-in, addon, add-on, snap-in or snapin ; but see [[Software_extension|'extension']]) is a computer program that interacts with a host application (a web browser or an email client, for example) to provide a certain, usually very specific, function "on demand". Applications support plugins for many reasons. Some of the main reasons include: enabling third-party developers to create capabilities to extend an application, to support features yet unforeseen, to reduce the size of an application, and to separate source code from an application because of incompatible software licenses. Examples of applications and their plug-ins include:Email clients use plug-ins to decrypt and encrypt email (Pretty Good Privacy)Graphics software use plug-ins to support file formats and process images (Adobe Photoshop)Media players use plug-ins to support file formats and apply filters (foobar2000, GStreamer, Quintessential, VST, Winamp, XMMS)Packet sniffers use plug-ins to decode packet formats (OmniPeek)Remote sensing applications use plug-ins to process data from different sensor types (Opticks)Software development environments use plug-ins to support programming languages (Eclipse, jEdit, MonoDevelop)Web browsers use plug-ins to play video and presentation formats (Flash, QuickTime, Microsoft Silverlight, 3DMLW)Some digital mixing consoles allow plug-ins to extend features such as reverberation effects, equalization and compression.Some Web content management system use plug-ins to increase your functionalities (Joomla, WordPress).MechanismThe host application provides services which the plug-in can use, including a way for plug-ins to register themselves with the host application and a protocol by which data is exchanged with plug-ins. Plug-ins are dependent on these services provided by the host application and do not usually work by themselves. Conversely, the host application is independent of the plug-ins, making it possible for plug-ins to be added and updated dynamically without changes to the host application.Open application programming interfaces (APIs) provide a standard interface, allowing third parties to create plugins that interact with the host application. A stable API allows third-party plug-ins to function as the original version changes and to extend the lifecycle of obsolete applications. The Adobe Photoshop and After Effects plug-in APIs have become a standard and been adopted to some extent by competing applications. Other examples of such APIs include Audio Units and VST.For example, a network switch may ship with an unoccupied but non-standard port to accommodate various optional physical layer connectors, while games and productivity applications often use plug-in architectures which allow original and third-party publishers to add functionality.Manufacturers can use plug-ins to create vendor lock-in by limiting upgrade options to only those available from or endorsed by the original manufacturer. IBM's Micro Channel Architecture, technically superior to Industry Standard Architecture as a way to add components to IBM PCs, largely failed to gain wide support due to the difficulty in getting certification for third-party devices. The Microsoft Flight Simulator series is famous for its aircraft add-ons.Plug-ins and ExtensionsPlug-ins are slightly different from extensions, which modify or add to existing functionality. The main difference is that plug-ins generally rely on the host application's user interface and have a well-defined boundary to their possible set of actions. Extensions generally have fewer restrictions on their actions, and may provide their own user interfaces. They sometimes are used to decrease the size of the host application and offer optional functions. Mozilla Firefox and related software use Add-on as an inclusive term for a category of augmentation modules that are subdivided into plug-ins, themes, search engines and a well-developed extension system which reduces the feature creep that plagued the Mozilla Application Suite.HistoryPlug-ins can be traced back as far as the mid 1970s, when the EDT text editor running on the Unisys VS/9 operating system using the Univac 90/60 series mainframe computer, provided the ability to run a program from the editor and to allow such program to access the editor buffer, allowing an edit session in memory to be accessed by an external program. The plug-in program could make calls to the editor to have it perform text editing services upon the buffer that the editor shared with the plug-in. This feature was used by the Waterloo Fortran compiler to allow interactive compilation of Fortran programs being edited by EDT.Perhaps the first software applications on PCs to include a plug-in function were HyperCard and QuarkXPress on the Macintosh, both released in 1987. In 1988, Silicon Beach Software included plug-in functionality in Digital Darkroom and SuperPaint, and the term plug-in was coined by Ed Bomke. Currently, plug-ins are typically implemented as shared libraries that must be installed in a place prescribed by the host application. HyperCard supported a similar facility, but it was more common for the plug-in code to be included in the HyperCard documents (called stacks) themselves. This way, the HyperCard stack became a self-contained application in its own right, which could be distributed as a single entity that could be run by the user without the need for additional installation steps.Plug-in frameworksThe following plug-in frameworks are organized by programming language and can be used by software developers to add plug-in capability to their application.C++FxEngine Framework - a dataflow processing FrameworkQt Plug-Ins - part of TrollTech's Qt FrameworkDelphiTMS Plug-in FrameworkJavaJava Plug-in Framework (JPF), a plug-in mechanism adapted from Eclipse's plug-in mechanism from its pre-OSGi era.Rich Client Platform (RCP), platform for applications adapted from Eclipse , applications are written as plugins and may themselves have further plug-insOSGi, a standardized dynamic component system suited for plugin programming, used in Eclipse, many commercial J2EE application servers, Spring_Framework, and embedded applications.PythonSetuptoolsHive ERP Framework, a plugin-in framework that takes inspiration from OSGi and Eclipse RCP simplifying the concepts of both and adapting them to the pythonic philosophyThe Twisted Plug-in SystemSprinklesEnvisage.NETAL PlatformMono Add-ins - an add-in framework for .NET and MonoCode Project .NET Based Plug-in Framework.NET Add-In Team BlogPlux.NET - A Platform for Building Plug-in Systems Under .NETVisual AssistSee also AppletShared libraryExtensionCategory:Application programming interfaces Category:Technology neologisms Category:Software extensionsbg:Плъгин ca:Connector cs:Plugin de:Plug-in es:Complemento (informática) eo:Kromprogramo eu:Plugin fa:پلاگین fr:Plugin ko:플러그인 id:Plugin is:Viðbót it:Plugin (informatica) he:תוכנת תקע lv:Spraudnis nl:Plugin ja:プラグイン no:Programvareutvidelse pl:Add-on pt:Plugin ro:Plugin ru:Плагин sk:Zásuvný modul fi:Liitännäinen (tietotekniikka) sv:Insticksprogram vi:Plugin uk:Плагін zh:插件