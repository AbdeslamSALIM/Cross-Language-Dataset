Online Analytical Processing, or OLAP (), is an approach to quickly provide answers to analytical queries that are multi-dimensional in nature.&lt;/ref&gt; OLAP is part of the broader category [[business intelligence]], which also encompasses [[relational reporting]] and [[data mining]].&lt;ref&gt; The typical applications of OLAP are in business reporting for sales, marketing, management reporting, business process management (BPM), budgeting and forecasting, financial reporting and similar areas. The term OLAP was created as a slight modification of the traditional database term OLTP (Online Transaction Processing).Databases configured for OLAP employ a multidimensional data model, allowing for complex analytical and ad-hoc queries with a rapid execution time. They borrow aspects of navigational databases and hierarchical databases that are speedier than their relational kin.Nigel Pendse has suggested that an alternative and perhaps more descriptive term to describe the concept of OLAP is Fast Analysis of Shared Multidimensional Information (FASMI).The output of an OLAP query is typically displayed in a matrix (or pivot) format. The dimensions form the row and column of the matrix; the measures, the values.Conceptual DesignIn the core of any OLAP system is a concept of an OLAP cube (also called a multidimensional cube or a hypercube). It consists of numeric facts called measures which are categorized by dimensions. The cube metadata is typically created from a star schema or snowflake schema of tables in a relational database. Measures are derived from the records in the fact table and dimensions are derived from the dimension tables.Each measure can be thought of as having a set of labels, or meta-data associated with it. A dimension is what describes these labels; it provides information about the measure.A simple example would be a cube that contains a store's sales as a measure, and Date/Time as a dimension. Each Sale has a Date/Time label that describes more about that sale.Any number of dimensions can be added to the structure such as Store, Cashier, or Customer by adding a column to the fact table. This allows an analyst to view the measures along any combination of the dimensions.For Example: Sales Fact Table
+-----------------------+
| sale_amount | time_id |
+-----------------------+            Time Dimension
|      2008.08|     1234|---+     +----------------------------+
+-----------------------+   |     | time_id | timestamp        |
                            |     +----------------------------+
                            +----&gt;|   1234  | 20080902 12:35:43|
                                  +----------------------------+AggregationsIt has been claimed that for complex queries OLAP cubes can produce an answer in around 0.1% of the time for the same query on OLTP relational data.      The single most important mechanism in OLAP which allows it to achieve such performance is the use of aggregations. Aggregations are built from the fact table by changing the granularity on specific dimensions and aggregating up data along these dimensions. The number of possible aggregations is determined by every possible combination of dimension granularities.The combination of all possible aggregations and the base data contains the answers to every query which can be answered from the data  Relational Aggregation Operator Generalizing Group-By, Cross-Tab, and Sub-Totals
 | journal = J. Data Mining and Knowledge Discovery
 | volume = 1
 | issue = 1
 | pages = pp. 29–53
 | year = 1997
 | url = http://citeseer.ist.psu.edu/gray97data.html | accessdate=2008-03-20. Due to the potentially large number of aggregations to be calculated, often only a predetermined number are fully calculated while the remainder are solved on demand. The problem of deciding which aggregations (a.k.a. views) to calculate is known as the view selection problem. View selection can be constrained by the total size of the selected set of aggregations, the time to update them from changes in the base data, or both. The objective of view selection is typically to minimize the average time to answer OLAP queries, although some studies also minimize the update time as well. Many different approaches have been taken to view selection (which is NP-Complete), including greedy algorithms, randomized search, genetic algorithms and A* search algorithmA very effective way to support aggregation and other common OLAP operations is the use of bitmap indexes.TypesOLAP systems have been traditionally categorized using the following taxonomy.Multidimensional MOLAP is the 'classic' form of OLAP and is sometimes referred to as just OLAP. MOLAP uses database structures that are generally optimal for attributes such as time period, location, product or account code. The way that each dimension will be aggregated is defined in advance by one or more hierarchies.Relational ROLAP works directly with relational databases. The base data and the dimension tables are stored as relational tables and new tables are created to hold the aggregated information. Depends on a specialized schema design.Hybrid There is no clear agreement across the industry as to what constitutes "Hybrid OLAP", except that a database will divide data between relational and specialized storage. For example, for some vendors, a HOLAP database will use relational tables to hold the larger quantities of detailed data, and use specialized storage for at least some aspects of the smaller quantities of more-aggregate or less-detailed data.ComparisonEach type has certain benefits, although there is disagreement about the specifics of the benefits between providers.Some MOLAP implementations are prone to database explosion. Database explosion is a phenomenon causing vast amounts of storage space to be used by MOLAP databases when certain common conditions are met: high number of dimensions, pre-calculated results and sparse multidimensional data. The typical mitigation technique for database explosion is not to materialize all the possible aggregation, but only the optimal subset of aggregations based on the desired performance vs. storage trade off.MOLAP generally delivers better performance due to specialized indexing and storage optimizations. MOLAP also needs less storage space compared to ROLAP because the specialized storage typically includes compression techniques.ROLAP is generally more scalable. However, large volume pre-processing is difficult to implement efficiently so it is frequently skipped. ROLAP query performance can therefore suffer.Since ROLAP relies more on the database to perform calculations, it has more limitations in the specialized functions it can use.HOLAP encompasses a range of solutions that attempt to mix the best of ROLAP and MOLAP. It can generally pre-process quickly, scale well, and offer good function support.Other typesThe following acronyms are also sometimes used, although they are not as widespread as the ones above:WOLAP - Web-based OLAPDOLAP - Desktop OLAPRTOLAP - Real-Time OLAPAPIs and query languagesUnlike relational databases, which had SQL as the standard query language, and wide-spread APIs such as ODBC, JDBC and OLEDB, there was no such unification in the OLAP world for a long time. The first real standard API was OLE DB for OLAP (ODBO) specification from Microsoft which appeared in 1997 and introduced the MDX query language. Several OLAP vendors - both server and client - adopted it. In 2001 Microsoft and Hyperion announced the XML for Analysis specification, which was endorsed by most of the OLAP vendors. Since this also used MDX as a query language, MDX became the de-facto standard.ProductsHistoryThe first product that performed OLAP queries was Express, which was released in 1970 (and acquired by Oracle in 1995 from Information Resources). However, the term did not appear until 1993 when it was coined by Ted Codd, who has been described as "the father of the relational database". Codd's paper resulted from a short consulting assignment which Codd undertook for former Arbor Software (later Hyperion Solutions, and in 2007 acquired by Oracle), as a sort of marketing coup. The company had released its own OLAP product, Essbase, a year earlier. As a result Codd's "twelve laws of online analytical processing" were explicit in their reference to Essbase. There was some ensuing controversy and when Computerworld learned that Codd was paid by Arbor, it retracted the article. OLAP market experienced strong growth in late 90s with dozens of commercial products going into market. In 1998, Microsoft released its first OLAP Server - Microsoft Analysis Services, which drove wide adoption of OLAP technology and moved it into mainstream.Market structureGiven below is a list of top OLAP vendors in 2006 with figures in millions of United States Dollars.VendorGlobal RevenueMicrosoft Corporation1,801Hyperion Solutions Corporation1,077Cognos735Business Objects]]416MicroStrategy416SAP AG330Cartesis SA210Applix205Infor199Oracle Corporation159Others152Total5,700It should be noted that Microsoft was the only vendor that continuously exceeded the industrial average growth during 2000-6. Since the above data was collected, Hyperion has been acquired by Oracle, Cartesis by Business Objects, Business Objects by SAP, Applix by Cognos, and Cognos by IBM.See alsoBusiness IntelligenceData WarehousingData MiningPredictive analyticsBusiness analyticsOLTPBibliographyReferencesCategory:OLAP Category:Data management Category:Databases Category:Information technology managementaz:OLAP be:Аператыўная аналітычная апрацоўка дадзеных ca:OLAP cs:OLAP de:Online Analytical Processing es:OLAP fa:پردازش تحلیلی آن‌لاین fr:OLAP id:OLAP it:OLAP nl:Online analytical processing ja:OLAP pl:Online analytical processing pt:OLAP ru:OLAP zh:線上分析處理