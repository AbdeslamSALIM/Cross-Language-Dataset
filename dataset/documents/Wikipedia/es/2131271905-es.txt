thumb|right|[[Logotipo de Open Source.]] Código abierto (en inglés open source) es el término con el que se conoce al software distribuido y desarrollado libremente. Fue utilizado por primera vez en 1998 por algunos usuarios de la comunidad del software libre, tratando de usarlo como reemplazo al ambiguo nombre original en inglés del software libre (free software). No obstante, el término continúa siendo ambivalente, puesto que se usa en la actualidad por parte de programadores que no ofrecen software libre pero, en cambio, sí ofrecen las fuentes o código de los programas para su revisión o modificación previamente autorizada por parte de sus pares académicos.Dada la anterior ambivalencia, se prefiere el uso del término Software Libre para referirse a programas que se ofrecen con total libertad de modificación, uso y distribución bajo la regla implícita de no modificar dichas libertades hacia el futuro.Free en inglés significa dos cosas distintas dependiendo del contexto: gratuidad y libertad. Lo cual implica, para el caso que nos ocupa, "software por el que no hay que pagar" (software gratuito) y, además, software libre, según la acepción española de libertad.El término para algunos no resultó apropiado como reemplazo para el ya tradicional free software, pues eliminaba la idea de libertad, confundida usualmente con la simple gratuidad.Desde el punto de vista de una "traducción estrictamente literal", el significado textual de "código abierto" es que "se puede mirar el código fuente", por lo que puede ser interpretado como un término más débil y flexible que el del software libre. Sobre esta base, se argumenta que un programa de código abierto puede ser software libre, pero también puede ser semilibre o incluso completamente no libre. Sin embargo, por lo general, un programa de código abierto puede ser y de hecho es software libre, como igualmente un programa Software Libre es Open Source. Esto ocurre dado que ambos movimientos reconocen el mismo conjunto de licencias y mantienen principios equivalentes.Hay que diferenciar los programas Open source, que dan a los usuarios la libertad de mejorarlos, de los programas que simplemente tienen el código fuente disponible, posiblemente con fuertes restricciones sobre el uso de dicho código fuente. Mucha gente cree que cualquier software que tenga el código fuente disponible es open source, puesto que lo pueden manipular. Sin embargo, mucho de este software no da a sus usuarios la libertad de distribuir sus modificaciones, restringe el uso comercial, o en general restringe los derechos de los usuarios.Un término que pretende resolver posibles ambigüedades o confusiones que ambos términos generan es FOSS (Free Open Source Software).En la actualidad open source es utilizado para definir un movimiento nuevo de software (la Open Source Initiative), diferente al movimiento del Software Libre, incompatible con este último desde el punto de vista filosófico, y completamente equivalente desde el punto de vista práctico, de hecho, ambos movimientos trabajan juntos en el desarrollo práctico de proyectos.La idea que late detrás del open source es sencilla: cuando los programadores en internet pueden leer, modificar y redistribuir el código fuente de un programa, éste evoluciona, se desarrolla y mejora. Los usuarios lo adaptan a sus necesidades, corrigen sus errores a una velocidad impresionante, mayor a la aplicada en el desarrollo de software convencional o cerrado, dando como resultado la producción de un mejor software.Cronología de una idea22 enero 1998: Netscape anuncia que 'liberará' el código fuente del Navigator.3 febrero 1998: En la reunión de Palo Alto se acuña el término 'open source' y durante la semana siguiente Bruce Perens y Eric S. Raymond lanzan opensource.org.31 marzo 1998: El código del Navigator ya está disponible: en unas horas, mejoras del programa invaden la red.7 mayo 1998: Corel Computer Corporation anuncia el Netwinder, una computadora económica que corre bajo GNU/Linux.11 mayo 1998: Corel anuncia sus planes de adaptar WordPerfect y el resto de sus programas de ofimática a GNU/Linux.28 mayo 1998: Sun Microsystems y Adaptec se unen a GNU/Linux International (las primeras grandes empresas vendedoras de equipos y sistemas operativos en hacerlo).13-17 julio 1998: Oracle e Informix anuncian que conectarán sus bases de datos a GNU/Linux.10 agosto 1998: Sun Microsystems ofrece Solaris a usuarios individuales e instituciones educativas o sin ánimo de lucro.1 noviembre 1998: Se publican los Halloween Documents: planes de Microsoft contra GNU/Linux y otros proyectos open source.16 diciembre 1998: IDG anuncia que la cuota de mercado del GNU/Linux se incrementó un 212% en 1998.1-5 marzo 1999: LinuxWorld: primera exposición sobre GNU/Linux. HP, IBM, SAP inician el comienzo del apoyo de las firmas comerciales.15 marzo 1999: Apple lanza Darwin bajo licencia open source.4 junio 1999: Microsoft afirma que GNU/Linux vende más que Windows 98 en las grandes superficies.(Microsoft pretendió probar que tenia competencia debido a una demanda)Entre 1998 y 2000 se observó un gran crecimiento en la popularidad de Linux y de la formación de muchas empresas 'pro software de código abierto'. El movimiento también capturó la atención de la principal industria del software, llevando al software de código abierto las ofertas de compañías de software consolidadas como Sun Microsystems con StarOffice, que es su suite ofimática, e IBM con OpenAFS, que es una implementación de código abierto del Sistema de Ficheros Distribuido de Andrew.La prehistoria del open source incluye la historia completa de UNIX, de los programas gratuitos (freeware) de internet y la cultura hacker.Movimiento del ''open source''La filosofía del Open Source orienta su atención en la premisa de que al compartir el código, el programa resultante tiende a ser de calidad superior al software propietario, es una visión técnica. Por otro lado, el Software Libre funciona bajo un ideal: el software propietario, al no poder compartirse, es antiético dado que prohibir compartir entre seres humanos va en contra de las leyes naturales.El movimiento Open Source tiene un decálogo que debe cumplir un código para poder llamarse "Open Source" (es de hacer notar que estas 10 premisas son completamente equivalentes con las 4 libertades o principios del Software Libre), éstas son :Libre redistribución: el software debe poder ser regalado o vendido libremente.Código fuente: el código fuente debe estar incluido u obtenerse libremente.Trabajos derivados: la redistribución de modificaciones debe estar permitida.Integridad del código fuente del autor: las licencias pueden requerir que las modificaciones sean redistribuidas sólo como parches.Sin discriminación de personas o grupos: nadie puede dejarse fuera.Sin discriminación de áreas de iniciativa: los usuarios comerciales no pueden ser excluidos.Distribución de la licencia: deben aplicarse los mismos derechos a todo el que reciba el programaLa licencia no debe ser específica de un producto: el programa no puede licenciarse solo como parte de una distribución mayor.La licencia no debe restringir otro software: la licencia no puede obligar a que algún otro software que sea distribuido con el software abierto deba también ser de código abierto.La licencia debe ser tecnológicamente neutral: no debe requerirse la aceptación de la licencia por medio de un acceso por clic de ratón o de otra forma específica del medio de soporte del software.MediaPelículas de Código abierto - Bien que puede tratarse de la libre entrada y salida de la producción, la película esta disponible bajo una licencia (abierta) licencia o bien es producido con software de código abierto.Actualmente el director de la película antitrust (2001) esta en proceso de ofrecer su película de forma abierta.Por qué se llama Open SourceEl Open Source o Código Abierto, es hablar de Software Libre pero de forma amigable a las empresas. El término Open Source NO PLANTEA cuestiones éticas, como lo hace el término Software Libre. Richard Stallman, el creador del sistema GNU y la licencia libre GPL así como principal evangelizador acerca del software Libre y la cultura libre ha expresado su rechazo a utilizar el término "Open Source o Código Abierto" y prefiere usar Software Libre o Free Software.Por qué utilizar este término, y por qué no free software:La primera razón es que free software es un término muy ambiguo.La segunda y más importante es el marketing: se trata de introducir el modelo en el mundo de los negocios. Aunque el producto sea bueno, está atado a un pasado terrible. Free software le suena al hombre de negocios a estridente anticomercialismo. Los empresarios nunca comprarían free software, pero sí el mismo producto, hecho por la misma gente, con las mismas licencias, pero con la etiqueta cambiada a open source.Los desarrollos tecnológicos más radicales hoy en día, la Web y el sistema operativo Linux, fueron desarrollados en Europa bajo el modelo open-source, en el que la gente regala sus creaciones a los demás para que las usen, prueben y desarrollen. Pero, aunque el movimiento open-source surgió originariamente como colaboración entre particulares, el comercio y la sociedad en general todavía pueden aprender de él. En realidad, hay dos grandes lecciones que deberíamos aprender de lo que la gente open source llama la 'ética hacker':La primera lección es, naturalmente, el concepto de 'abierto': el modelo 'cerrado' no ha sido el que ha generado las innovaciones más importantes en la 'economía de la información'. En la competencia global, una revolución no está hecha por una sola persona, sino por una red de rebeldes, y eso necesita del modelo 'abierto'. Como ejemplo podemos considerar el inconveniente de la arquitectura cerrada de Apple frente al modelo abierto de los PC de IBM. O las telecomunicaciones europeas, que consiguieron ventaja gracias a los estándares abiertos NMT/GSM.Una segunda lección es la relación de los hackers con el trabajo. Los hackers como Berners-Lee (inventor del World Wide Web) y Torvalds explican que los de su clase logran grandes cosas porque se apasionan por lo que hacen. Tener un interés genuino en tu trabajo puede liberar tu creatividad y energía, infundir alegría y sentido a la vida, y permitir que desarrolles tu potencial como ser humano. Además de descartar la idea de que el trabajo es el mayor deber en la vida, los hackers pretenden desarrollar la tecnología que les permita un mejor equilibrio entre el trabajo y el ocio. Una de las cuestiones más extrañas del 'progreso' tecnológico es el cómo ha hecho que nuestras vidas sean más estresantes. Para muchos de nosotros, no sólo se trata de que nuestra jornada laboral esté llena de tareas cotidianas, sino que nuestra vida privada ha adoptado también este modelo.Por supuesto, no se refieren a hacker como criminal informático, sino en el sentido original de la palabra: una persona que le apasiona el conocimiento, descubrir o aprender nuevas cosas y entender el funcionamiento de éstas, y que quiere compartir sus resultados con los demás. Los hackers de internet y de UNIX entienden muy bien el componente técnico del open source. Es parte de su forma de trabajar: es como se realiza el trabajo en internet.La relación hacker-open source se encuentra por escrito en ''&quot;La Catedral y el Bazar&quot;''. Conocen lo fiables que son los engranajes de internet comparándolos con sus equivalentes privativos. Reemplazar el TCP/IP, DNS, Perl, Apache, etc., por el software Privativo sería, cuando menos, suicida.Muchos hackers conocen y comparten las bondades del &quot;open source&quot; o &quot;código abierto&quot;, pero se muestran reacios a utilizarlo porque creen que pueden perder su trabajo remunerado. Sin embargo, hay suficientes razones para pensar que ese temor es infundado.El &quot;open source&quot; o &quot;código abierto&quot; no es sólo el medio por el que unos cuantos hackers tienen la oportunidad de luchar contra un monopolio. Este, además, ofrece la posibilidad a pequeñas y medianas empresas o individuos de colaborar para conseguir un producto que no podrían obtener debido a las altas restricciones y costosas licencias del software cerrado o privativo. También es una fórmula útil para corregir errores en un programa e introducir rápidamente los cambios que solicita el usuario final. El modelo open source lleva asociado un incremento en la seguridad de un sistema: su código fuente es público y está expuesto a millones de ojos. Lo cual quiere decir que los problemas se resolverán en lugar de esconderse hasta que la persona equivocada los descubra.Véase tambiénLicencia Open SourceOpen Source InitiativeSoftware LibreCódigo cerrado (código privativo)Software no libreFOSS - FLOSSEnlaces externosOpen Source Definition.Traducción al español de Open Source Definition.Crítica de la FSF al término código abierto (open source).Buscador de Open Source.Internet, hackers y software libre Compilación de artículos a cargo de Carlos Gradin, Editoria Fantasma, Buenos Aires.Alternativa de código abierto Encuentra alternativas de software de código abierto para los software comerciales más conocidos.Categoría:Código abierto Categoría:Distribución de softwareaf:Ope-inhoud ar:مصدر مفتوح ast:Códigu abiertu bn:মুক্ত সোর্স ca:Codi obert da:Open source de:Open Source en:Open source eo:Malfermita kodo et:Avatud lähtekood fi:Avoin lähdekoodi fr:Open Source gl:Open Source he:קוד פתוח hi:ओपन सोर्स सॉफ्टवेयर hr:Otvoreni kod id:Sumber terbuka is:Opinn hugbúnaður it:Open source ja:オープンソース kn:ಮುಕ್ತ ತಂತ್ರಾಂಶ ko:오픈 소스 lb:Open Source ms:Sumber terbuka nds:Open Source nl:Open source nn:Open kjeldekode no:Åpen kildekode pl:Otwarte Oprogramowanie pt:Código aberto ro:Open source scn:Surgenti aperta simple:Open source sk:Open source sq:Open source sv:Öppen källkod ta:திறந்த மூலநிரல் th:โอเพนซอร์ซ tr:Açık kaynak ur:آزاد مصدر yi:אפענער קאד zh:开放源代码