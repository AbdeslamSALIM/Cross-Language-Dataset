Lenguaje Erlang es un lenguaje de programación concurrente y un sistema de ejecución que incluye una máquina virtual y librerías.El subconjunto de programación secuencial de Erlang es un lenguaje funcional, con evaluación estricta, asignación única, y tipado dinámico. Fue diseñado en la compañía Ericsson para realizar aplicaciones distribuidas, tolerantes a fallos, soft-real-time y de funcionamiento ininterrumpido. Proporciona el cambio en caliente de código de forma que éste se puede cambiar sin parar el sistema. Originalmente, Erlang, era un lenguaje propietario de Ericsson, pero fue cedido como open source en 1998.La implementación de Ericsson es, principalmente interpretada pero también incluye un compilador HiPE (sólo soportado en algunas plataformas). La creación y gestión de procesos es trivial en Erlang, mientras que, en muchos lenguajes, los hilos se consideran un apartado complicado y propenso a errores. En Erlang toda concurrencia es explícita.Erlang recibe el nombre de A. K. Erlang. A veces se piensa que el nombre es una abreviación de 'ER'icsson 'LANG'uage, debido a su uso intensivo en Ericsson. Según Bjarne Däcker quién fue el jefe del Computer Science Lab en su día, esta dualidad es intencional.Lenguaje funcionalEl código fuente tiene este aspecto:'''-module'''(fact).
'''-export'''([fac/1]).fac(0) -&gt; 1;
fac(N) '''when''' N &gt; 0 -&gt; N * fac(N-1).A continuación una implementación del algoritmo Quicksort.''%% quicksort:qsort(List)''
''%% Ordena una lista de elementos''
'''-module'''(quicksort).
'''-export'''([qsort/1]).qsort([]) -&gt; [];
qsort([Pivot|Rest]) -&gt;
    qsort([ X || X &lt;- Rest, X &lt; Pivot]) ++ [Pivot] ++ qsort([ Y || Y &lt;- Rest, Y &gt;= Pivot]).El ejemplo anterior llama recursivamente a la función qsort hasta que no hay nada más para ordenar. La expresión [ X || X  se puede interpretar como: "Elige todo X dónde X es miembro de Rest y X es menor que Pivot", resultando en un forma muy sencilla de manipular listas. Como se puede evaluar cualquier expresión boleana entre dos tipos de datos diferentes, la evaluación es sencilla: por ejemplo, 1  devolverá true.Sin embargo, una función de comparación se puede usar si es necesario cambiar el orden en que Erlang basa su valor de retorno (true or false) Por ejemplo, si quiseramos una lista ordenada dónde a  fuese evaluado como true.El siguiente código ordenaría un lista en función de la longitud:'''-module'''(listsort).
'''-export'''([by_length/1]).by_length(Lists) -&gt;
    F = fun(A,B) when is_list(A), is_list(B) -&gt;
            length(A) &lt; length(B)
        end,
    qsort(Lists, F). qsort([], _) -&gt; [];
 qsort([Pivot|Rest], Smaller) -&gt;
     qsort([ X || X &lt;- Rest, Smaller(X, Pivot)], Smaller)
     ++ [Pivot] ++
     qsort([ Y || Y &lt;- Rest, not(Smaller(Y, Pivot))], Smaller).Lenguaje orientados a concurrencia y distribuciónLa mayor fortaleza de Erlang es el soporte para concurrencia. Tiene un pequeño pero potente conjunto de primitivas para crear procesos y comunicar entre los mismos. El modelo de procesos se basa en C.A.R. Hoare's Communicating Sequential Processes. Dichos procesos son la forma principal de estructurar una aplicación, y se puede crear un gran número de ellos sin que se degrade el rendimiento (se ha llegado a hacer una prueba con 20 millones de procesos http://groups.google.com/group/comp.lang.functional/msg/33b7a62afb727a4f?dmode=source).El soporte para procesos distribuidos es también parte de Erlang. Los procesos se pueden crear en nodos remotos, y la comunicación con ellos es transparente. Es decir, la comunicación con procesos remotos se hace exactamente de la misma manera que la comunicación con procesos locales.Ejemplos: Pid = '''spawn'''(Mod, Func, Args)       ''% ejecutar la función Func como un nuevo proceso''
 Pid = '''spawn'''(Node, Mod, Func, Args) ''% ejecutar la función Func en un nodo remoto'' Pid ! a_message      ''% enviar un mensaje al proceso (asíncronamente)'' '''receive'''       ''% recibir el mensaje enviado a este proceso''
   a_message -&gt; do_something
 '''end'''.La principal forma de control de errores en Erlang también se basa en la concurrencia. Cuando un proceso se cuelga, termina limpiamente y envía un mensaje al proceso controlador quien puede actuar en consecuencia. Esta forma de control de errores puede incrementar la mantenibilidad y reducir la complejidad del código.DistribuciónErlang fue hecho público por Ericsson como open-source para asegurar su independencia de un único vendedor y para darlo a conocer de una forma más amplia. La distribución del lenguaje junto con las librerías y la base de datos de tiempo real (Mnesia) se denominan Open Telecom Platform (Plataforma abierta de Telecom), o OTP. Ericsson y otras pocas empresas ofrecen soporte comercial para Erlang.Desde que se cogió el camino open-source en 1998, Erlang empezó a ser utilizado por varias compañías en todo el mundo, incluyendo Nortel y T-Mobile. De todas formas, Erlang todavía no es un lenguaje de programación muy extendido.En la fecha actual (2006), existe un desarrollo activo de Erlang con ediciones regulares. Está disponible para diversos sistemas operativos de tipo Unix y Microsoft Windows.Véase tambiénejabberd, un servidor de mensajes instantáneos XMPP/Jabber escrito en Erlang.Wings 3D, modelador de 3D en Erlang.Yet another web server (YAWS, un servidor de aplicaciones web muy completo en Erlang).Tsung, una herramienta de análisis de rendimiento muy potente.Enlaces externosProyecto principalPágina Web del proyectoListas de distribución y preguntas más frecuentespresentación de ErlangOtros enlacesServicios de formación y consultoría de Erlangportal con mucha información sobre Erlang: Howto, forums, wiki, FAQ, ...Process-one (Empresa que ofrece soporte de Erlang)Un portal dedicado a ErlangUna jungla de código ErlangUn agregador de news para ErlangRepositorio de artículos y papers sobre ErlangVideo documentando las características de Erlang (es necesario el Google Video Player, más de 500 MB)ESense - Completado de código tipo IntelliSense para Erlang sobre EmacsErlangca:Erlang cs:Erlang (programovací jazyk) da:Erlang (programmeringssprog) de:Erlang (Programmiersprache) en:Erlang (programming language) fr:Erlang (langage) gl:Erlang it:Erlang (linguaggio) ja:Erlang ko:얼랑 (프로그래밍 언어) nl:Erlang (programmeertaal) pl:Erlang (język programowania) ru:Erlang sv:Erlang (programspråk) th:ภาษาเออร์แลง uk:Erlang zh:Erlang