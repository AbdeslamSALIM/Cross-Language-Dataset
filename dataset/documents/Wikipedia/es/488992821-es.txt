Bit es el acrónimo de B'inary dig'it. (dígito binario). Un bit es un dígito del sistema de numeración binario. La Real Academia Española (RAE) ha aceptado la palabra bit con el plural bits.Mientras que en el sistema de numeración decimal se usan diez dígitos, en el binario se usan sólo dos dígitos, el 0 y el 1. Un bit o dígito binario puede representar uno de esos dos valores, 0''' ó '''1.Podemos imaginarnos un bit como una bombilla que puede estar en uno de los siguientes dos estados:apagada apagada o encendida encendidathumb|200px|Memoria de computadora de 1980 donde se pueden ver los bits físicos. Este conjunto de unos 4x4 cm. corresponden a 512 bytes.El bit es la unidad mínima de información empleada en informática, en cualquier dispositivo digital, o en la teoría de la información. Con él, podemos representar dos valores cuales quiera, como verdadero o falso, abierto o cerrado, blanco o negro, norte o sur, masculino o femenino, rojo o azul, etc. Basta con asignar uno de esos valores al estado de "apagado" (0), y el otro al estado de "encendido" (1).Combinaciones de bits&nbsp;+Hay 4 combinaciones posibles con dos bitsBit 1Bit 0apagada]] 0 &nbsp;apagada]] 0 &nbsp;apagada]] 0 &nbsp;encendida]] 1 &nbsp;encendida]] 1 &nbsp;apagada]] 0 &nbsp;encendida]] 1 &nbsp;encendida]] 1 &nbsp;|Con un bit podemos representar solamente dos valores, que suelen representarse como 0 ó 1. Para representar o codificar más información en un dispositivo digital, necesitamos una mayor cantidad de bits. Si usamos dos bits, tendremos cuatro combinaciones posibles:0 0 - Los dos están "apagados"0 1 - El primero (de derecha a izquierda) está "encendido" y el segundo "apagado"1 0 - El primero (de derecha a izquierda) está "apagado" y el segundo "encendido"1 1 - Los dos están "encendidos"Con estas cuatro combinaciones podemos representar hasta cuatro valores diferentes, como por ejemplo, los colores rojo, verde, azul y negro.A través de secuencias de bits, se puede codificar cualquier valor discreto como números, palabras, e imágenes. Cuatro bits forman un nibble, y pueden representar hasta 24 = 16 valores diferentes; ocho bits forman un octeto, y se pueden representar hasta 28 = 256 valores diferentes. En general, con n número de bits pueden representarse hasta 2n valores diferentes.Nota: Un byte y un octeto no son la misma cosa. Mientras que un octeto siempre tiene 8 bits, un byte contiene un número fijo de bits, que no necesariamente son 8. En los computadores antiguos, el byte podría estar conformado por 6, 7, 8 ó 9 bits. Hoy en día, en la inmensa mayoría de los computadores, y en la mayoría de los campos, un byte tiene 8 bits, siendo equivalente al octeto, pero hay excepciones.Valor de posiciónEn cualquier sistema de numeración posicional, el valor de los dígitos depende del lugar en el que se encuentren.En el sistema decimal, por ejemplo, el dígito 5 puede valer 5 si está en la posición de las unidades, pero vale 50 si está en la posición de las decenas, y 500 si está en la posición de las centenas. Generalizando, cada vez que nos movemos una posición hacia la izquierda el dígito vale 10 veces más, y cada vez que nos movemos una posición hacia la derecha, vale 10 veces menos. Esto también es aplicable a números con decimales.+---------+---------+---------+
| Centena | Decena  | Unidad  |
+---------+---------+---------+
|  x 100  |   x 10  |   x 1   |
+---------+---------+---------+Por tanto, el número 153 en realidad es: 1 centena + 5 decenas + 3 unidades, es decir,100 + 50 + 3 = 153.En el sistema binario es similar, excepto que cada vez que un dígito binario (bit) se desplaza una posición hacia la izquierda vale el doble (2 veces más), y cada vez que se mueve hacia la derecha, vale la mitad (2 veces menos).+----+----+----+----+----+     Valor del bit
| 16 |  8 |  4 |  2 |  1 | &lt;-- de acuerdo a
+----+----+----+----+----+     su posiciónAbajo vemos representado el número 19.16 + 2 + 1 = 19.168421de los bits como bombillasencendidas y apagadas100114211/21/4de los bits como bombillasencendidas y apagadas1010110 = 1001125.2510 = 101.012Bits más y menos significativosUn conjunto de bits, como por ejemplo un byte, representa un conjunto de elementos ordenados. Se llama bit más significativo (MSB) al bit que tiene un mayor peso (mayor valor) dentro del conjunto, análogamente, se llama bit menos significativo (LSB) al bit que tiene un menor peso dentro del conjunto.En un Byte, el bit más significativo es el de la posición 7, y el menos significativo es el de la posición 0+---+---+---+---+---+---+---+---+ 
| 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 | &lt;-- Posición del bit
+---+---+---+---+---+---+---+---+
|128|64 |32 |16 | 8 | 4 | 2 | 1 | &lt;-- Valor del bit de acuerdo a su posición
+---+---+---+---+---+---+---+---+
  |                           |
  |                          (-)- Bit menos significativo
 (+)----------------------------- Bit más significativoEn una palabra de 16 bits, el bit más significativo es el de la posición 15 y el menos significativo el de la posición 0.+----+----+----+----+----+----+---+---+---+---+---+---+---+---+---+---+ 
| 15 | 14 | 13 | 12 | 11 | 10 | 9 | 8 | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 | &lt;-- Posición del bit
+----+----+----+----+----+----+---+---+---+---+---+---+---+---+---+---+
|2^15|2^14|2^13|2^12|2^11|2^10|512|256|128|64 |32 |16 | 8 | 4 | 2 | 1 | &lt;-- Valor del bit de acuerdo 
+----+----+----+----+----+----+---+---+---+---+---+---+---+---+---+---+     a su posición
  |                                                                 |
  |                                                                 +-- Bit menos significativo
  +-------------------------------------------------------------------- Bit más significativoTomemos, por ejemplo, el número decimal 27 codificado en forma binaria en un octeto:27 = 16 + 8 + 2 + 1 = 2^4 + 2^3 + 2^1 + 2^0 - 0 0 0 1 1 0 1 1Aquí, el primer '0', el de la izquierda, (que se corresponde con el coeficiente de 2^7), es el bit más significativo, siendo el último '1', el de la derecha, (que se corresponde con el coeficiente de 2^0), el menos significativo.En cualquier caso, el bit más significativo es el del extremo izquierdo y el menos significativo el del extremo derecho. Esto es análogo al sistema decimal, en donde el dígito más significativo es el de la izquierda y el menos significativo el de la derecha, como por ejemplo, en el número 179, el dígito más significativo, el que tiene mayor valor, es el 1, (el de las centenas), y el menos significativo, el 9, (el de las unidades).Little endian y Big endianEn los computadores cada byte se identifica con su posición en la memoria (dirección). Cuando se manejan números de más de un byte, éstos también deben estar ordenados. Este aspecto es particularmente importante en la programación en código máquina, ya que algunas máquinas consideran el byte situado en la dirección más baja el menos significativo (arquitecura little endian, como los procesadores Intel) mientras que otras consideran que ése es el más significativo (arquitectura big endian, como los procesadores Motorola). De este modo, un byte con el número decimal 27 se almacenaría en una máquina little endian igual que en una máquina big endian, ya que sólo ocupa un byte. Sin embargo, para números más grandes los bytes que los representan se almacenarían en distinto orden en cada arquitectura.Por ejemplo, consideremos el número hexadecimal entero AABBCCDD, de 32 bits (4 bytes), localizado en la dirección 100 de la memoria. El número ocuparía las posiciones desde la 100 a la 103, pero dependiendo de si la máquina es little o big endian, los bytes se almacenarían de diferente manera:Little-endian (Como Intel)100101102103...DDCCBBAA...Big-endian (Como Motorola)100101102103...AABBCCDD...En las imágenes de arriba, en donde se representan las posiciones de memoria 100, 101, 102 y 103 creciendo de izquierda a derecha, «parece» que la representación big endian es más natural, ya que el número AABBCCDD lo podemos leer correctamente (ver figura), mientras que en la representación little endian parece que el número está al revés, o «patas arriba». Sin embargo, no hay nada que nos impida imaginar que las direcciones de memoria «crecen» de derecha a izquierda, y al observar la memoria de esta manera, la representación little endian «se ve natural» y es la big endian la que «parece» al revés, como se muestra en las figuras de abajo.Little-endian103102101100...AABBCCDD...Big-endian103102101100...DDCCBBAA...Véase tambiénByteTipo de datoTipos de datos máquinaQubitNibbleCélula binariaSistema binarioÁlgebra de BooleEnlaces externosCategoría:Acrónimos de informática Categoría:Teoría de la información Categoría:Unidades de informaciónan:Bit ar:بت ast:Bit az:Bit be-x-old:Біт bg:Бит (информатика) bn:বিট br:Bit bs:Bit ca:Bit cs:Bit da:Bit de:Bit el:Bit en:Bit eo:Bito et:Bitt eu:Bit fa:بیت (رایانه) fi:Bitti fr:Bit fur:Bit fy:Bit ga:Giotán gl:Bit he:סיבית hr:Bit hu:Bit ia:Bit id:Bit is:Biti (tölvufræði) it:Bit (informatica) ja:ビット ka:ბიტი kaa:Bit kk:Бит (өлшем бірлігі) ko:비트 lb:Bit lo:ບິຕ lt:Bitas lv:Bits mk:Бит mn:Бит mr:बाईट ms:Bit mt:Bit nl:Bit (informatica) nn:Bit no:Bit pl:Bit pt:Bit ro:Bit ru:Бит sh:Bit simple:Bit sk:Bit sl:Bit sq:Bit sr:Бит (рачунарство) sv:Bit ta:இருமம் tg:Бит th:บิต tr:Bit (bilişim) uk:Біт ur:تثم vi:Bit yi:ביט zh:位元