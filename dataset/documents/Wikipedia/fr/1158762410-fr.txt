En mathématiques, les problèmes de programmation linéaire (PL) sont des problèmes d'optimisation où la fonction objectif et les contraintes sont toutes linéaires. Néanmoins, la plupart des résultats présentés ici sont également vrais si l'objectif est une fonction monotone croissante de chaque variable considérée. La programmation linéaire désigne également la manière de résoudre les problèmes linéaires.La programmation linéaire est un domaine central de l'optimisation, car les problèmes de PL sont les problèmes d'optimisation les plus faciles - toutes les contraintes y étant linéaires. Beaucoup de problèmes réels de recherche opérationnelle peuvent être exprimés comme un problème de PL. Pour cette raison un grand nombre d'algorithmes pour la résolution d'autres problèmes d'optimisation sont fondés sur la résolution de problèmes linéaires.Le terme programmation linéaire suppose que les solutions à trouver doivent être représentées en variables réelles. S'il est nécessaire d'utiliser des variables discrètes dans la modélisation du problème, on parle alors de programmation linéaire en nombres entiers (PLNE). Il est important de savoir que ces derniers sont nettement plus difficiles à résoudre que les PL à variables continues.ExempleConsidérons un agriculteur qui possède des terres, de superficie égale à H'' hectares, dans lesquelles il peut planter du blé et du maïs. L'agriculteur possède une quantité ''E d'engrais et I'' d'insecticide. Le blé nécessite une quantité ''E1 d'engrais par hectare et I''1 d'insecticide par hectare. Les quantités correspondantes pour le maïs sont notées ''E2 et I2.Soit P''1 le prix de vente du blé et ''P2 celui du maïs. Si l'on note par x''1 et ''x2 le nombre d'hectares à planter en blé et en maïs, alors le nombre optimal d'hectares à planter en blé et en maïs peut être exprimé comme un programme linéaire: \mbox  P_1 x_1 + P_2 x_2 (maximiser le revenu net) \mbox  x_1 + x_2 \le H (borne sur le nombre total d'hectares) E_1 x_1 + E_2 x_2 \le E (borne sur la quantité d'engrais) I_1 x_1 + I_2 x_2 \le I (borne sur la quantité d'insecticide) x_1 \ge 0,\, x_2 \ge 0 (on ne peut pas planter un nombre négatif d'hectares)ThéorieComme l'exemple précédent le montre, la programmation consiste à déterminer disons n'' variables, x_1, \cdots, x_n afin de '''maximiser' l'objectif linéaireL(x_1, \cdots, x_n) = \sum_^n c_i x_isous différentes contraintes, comme par exemple les m inégalités suivantes\sum_^n A_ x_i \leq b_ipour i'' allant de 1 à ''m. De telles contraintes permettent d'inclure des contraintes de signe, comme par exemple x_1 \geq 0 ou x_1 \leq 0. L'adoption de l'écriture matricielle de la forme standard donne\begin \max L(x) = & c^tx & &\\    s.c &amp; Ax   &amp;\leq&amp; b\\
        &amp;  x   &amp;\geq&amp;0\end  On peut, lors de la programmation linéaire, chercher à minimiser la fonction objectif. On se ramène au cas précédent (la forme standard) en cherchant à maximiser -L(x_1,\cdots,x_n).D'un point de vue géométrique, les contraintes linéaires forment un polyèdre convexe. Si la fonction objectif est elle aussi linéaire, tous les optima locaux sont également des optima globaux; cela reste vrai si elle est monotone croissante sur chaque variable considérée, le cas linéaire ne représentant qu'un cas particulier dont la propriété n'est d'ailleurs pas utilisée.Il y a deux cas où il n'existe pas de solution optimale. Le premier est lorsque les contraintes se contredisent mutuellement (par exemple ((x \ge 2) \wedge (x \le 1))). Dans un tel cas, le polytope est vide et il n'y a pas de solution optimale puisqu'il n'y a pas de solution du tout. Le PL est alors infaisable.Le polyèdre peut également être non-borné dans la direction définie par la fonction objectif (par exemple x_1 + 3 x_2 tel que x_1 \ge 0, x_2 \ge 0, x_1 + x_2 \ge 10). Dans ce cas, il n'y a pas de solution optimale puisqu'il est possible de construire des solutions satisfaisant les contraintes avec des valeurs arbitrairement élevées (ou basses) de la fonction objectif.En dehors de ces deux cas (qui sont finalement rares dans les problèmes pratiques), l'optimum est toujours atteint à un sommet du polytope. Cependant, l'optimum n'est pas nécessairement unique: il est possible d'avoir un ensemble de solutions optimales correspondant à une arête ou à une face du polytope, voire au polytope en entier.DualitéTous les programmes linéaires peuvent s'écrireLes détails exacts des deux représentations varient beaucoup d'un ouvrage à l'autre sous la forme suivante: \begin \max z = & c^tx & &\\    s.c &amp; Ax   &amp;\leq&amp; b\\
        &amp;  x   &amp;\geq&amp;0\end Où c et x sont des vecteurs de taille n, b un vecteur de taille m, et A une matrice de taille m \times n. Si on désigne cette représentation sous le terme de forme primale, on désigne alors sous le terme de forme duale le problème suivant: \begin \min w = & b^ty & &\\    s.c &amp; A^ty   &amp;\geq&amp; c\\
        &amp;  y   &amp;\geq&amp;0\end Où A, b et c sont les mêmes et y un vecteur de taille m. (Note: )Les deux problèmes sont très fortement liés. Si l'un d'entre eux possède une solution optimale, alors l'autre aussi. De plus, les deux solutions ont alors la même valeur (w*=z*). Si l'un d'entre eux est non-borné, l'autre ne possède pas de solution.Outre son intérêt théorique, le problème dual possède de très intéressantes applications économiques. À chaque contrainte primale correspond une variable duale. La valeur de cette variable dans la solution optimale représente le coût marginal associé à la contrainte primale.Algorithmes de la programmation linéaireL'algorithme du simplexe permet de résoudre les problèmes de PL en construisant tout d'abord une solution réalisable qui est un sommet du polytope puis en se déplaçant selon les arêtes du polytope pour atteindre des sommets pour lesquels la valeur de l'objectif est de plus en plus grande, jusqu'à atteindre l'optimum. Bien que cet algorithme soit efficace en pratique et qu'il soit assuré de trouver l'optimum, son comportement dans le pire cas peut être mauvais. Il est ainsi possible de construire un PL pour lequel la méthode du simplexe requiert un nombre d'étapes exponentiel en la taille du problème. Ainsi, pendant plusieurs années, savoir si la PL était un problème NP-complet ou polynomial est resté une question ouverte.Le premier algorithme polynomial pour la PL a été proposé par Leonid Khachiyan en 1979. Il est basé sur la méthode de l'ellipsoïde en optimisation non linéaire précédemment proposée par Naum Shor. Cette méthode est elle-même une généralisation de la méthode de l'ellipsoïde en optimisation convexe due à Arkadi Nemirovski (Prix John von Neumann 2003), et à D. Yudin.Cependant, l'efficacité pratique de l'algorithme de Khachiyan est décevante : l'algorithme du simplexe est pratiquement toujours plus performant. En revanche, ce résultat a encouragé la recherche dans les méthodes de point intérieur. Par opposition à l'algorithme du simplexe qui considère uniquement la frontière du polytope définie par les contraintes, les méthodes de point intérieur évoluent à l'intérieur du polytope.En 1984, N. Karmarkar propose la méthode projective. C'est le premier algorithme efficace à la fois en théorie et en pratique. Sa complexité dans le pire cas est polynomiale et les expérimentations sur les problèmes pratiques montrent que la méthode peut raisonnablement être comparée à l'algorithme du simplexe. Depuis lors, plusieurs méthodes de point intérieur ont été proposées et étudiées. Une des méthodes les plus célèbres est la méthode prédictive/corrective qui fonctionne très bien en pratique même si son étude théorique est encore imparfaite.Pour la résolution pratique de problèmes de PL ordinaires, il est actuellement commun de considérer comme équivalentes les (bons) codes basés sur les méthodes dérivées du simplexe ou du point intérieur. De plus, pour la résolution de problèmes de grande taille, une technique comme la génération de colonnes peut se révéler extrêmement efficace.Les solveurs basés sur la PL sont de plus en plus utilisés pour l'optimisation de divers problèmes industriels tels que l'optimisation des flux de transports ou la planification de la production. Toutefois, les modèles de PL se révèlent insuffisants pour représenter de nombreux problèmes, la programmation linéaire en nombres entiers (PLNE) permet alors de modéliser un grand nombre de problèmes supplémentaires, notamment les problèmes NP-complets.Programmation linéaire en nombres entiersUn problème de programmation linéaire en nombres entiers (PLNE) n'est pas un programme linéaire dans le sens où son domaine de réalisabilité n'est pas un polyèdre mais un ensemble discret de points. Pourtant, on peut le décrire comme un PL auquel on ajoute la contrainte supplémentaire que certaines variables ne peuvent prendre que des valeurs entières. On distingue le programme linéaire mixte avec variables entières et continues du programme entier avec toutes ses variables entières.La PLNE est un problème NP-complet car de nombreux problèmes NP-complets peuvent être exprimés comme des PLNE (par exemple trouver un stable dans un graphe  G=(V,E)  revient à trouver un vecteur  x\in \^E  satisfaisant  x_u +x_v \le 1  pour tout arête  uv \in E ). Les algorithmes décrits ci-dessus pour la PL ne résolvent pas les problèmes de PLNE. Algorithmiquement donc, la résolution d'un PLNE est autrement plus difficile celle d'un PL qui joue pourtant un rôle crucial quant à leur résolution, principalement pour deux raisons. Premièrement, la relaxation continue d'un PLNE (c'est le PLNE sans les contraintes d'intégrité) est un PL qui peut être résolu efficacement et fournir ainsi une borne duale (dans le sens non-réalisable). Les algorithmes de résolution de PLNE, tels que les algorithmes par séparation et évaluation se basent sur cette relaxation continue pour diminuer au maximum l'énumération des solutions. Deuxièmement, le théorème Optimisation/Séparation de Grötschel, Lovasz et Schrijver permet de résoudre en pratique par la PL les problèmes entiers dont on connait une bonne description polyèdrale (c'est-à-dire dont on peut séparer les contraintes en temps polynomial). C'est le principe de fonctionnement des algorithmes de plans sécants,ApplicationsLa programmation linéaire est essentiellement appliquée pour résoudre des problèmes d'optimisation à moyen et long terme (problèmes stratégiques et tactiques, dans le vocabulaire de la recherche opérationnelle). Les domaines d'application de ces problèmes sont très nombreux aussi bien dans la nature des problèmes abordés (planification et contrôle de la production, distribution dans des réseaux) que dans les secteurs d'industrie : industrie manufacturière, énergie (pétrole, gaz, électricité, nucléaire), transports (aériens, routiers et ferroviaires), télécommunications, industrie forestière, finance.Applications dans le pétrole La technique de la programmation linéaire est couramment appliquée dans l'industrie pétrolière. C'est l'une des industries, si ce n'est la principale qui utilise quotidiennement la PL (programmation linéaire). Elle est l'outil qui permet au raffineur de faire la détermination optimale de production d'une raffinerie. Pour ce faire, le programme doit tenir compte d'un certain nombre de contraintes telles que :bruts disponibles, leurs rendements et les qualités des coupes,spécifications des produits à fabriquer,limitations de débouchés pour certains produits,capacités des unités,modes de réglages des installations,capacités de stockage disponibles.La PL peut également être utilisée dans d'autres domaines du raffinage, par exemple :calculs de la composition optimale des mélanges de produits (carburants, gasoils, fuels) en tenant compte des spécifications.l'optimisation dans l'utilisation des installations,calculs de l'obtention du meilleur préchauffage des bruts et des charges,détermination du meilleur équilibre «vapeur-électricité» d'une raffinerie.En dehors des raffineries, on peut utiliser la PL dans la recherche opérationnelle pour :bâtir des plans à long/moyen et court termes d'une compagnie pétrolière,optimiser le fonctionnement d'une flotte de tankers et la mise en place des produits.RéférencesBibliographieChristelle Guéret, Christian Prins et Marc Sevaux, Programmation Linéaire, Eyrolles, 2000 , 365 pages.Eric Jacquet-Lagrèze. Programmation Linéaire - Modélisation et mise en œuvre informatique. Collection : P.I.Q. Poche - Editeur : EconomicaLiens externes [http://www.princeton.edu/~rvdb/LPbook Linear Programming: Foundations and Extensions]. IBM's article on GLPK A technical article on  with an introduction to Linear Programming by IBM [http://lpsolve.sourceforge.net/ lp_solve], un autre logiciel libre pour la programmation linéaire. Il peut être appelé via une interface de programmation, un fichier texte, ou un environnement de développement intégré. Guidance on Formulating LP problems 0-1 Integer Programming Benchmarks with Hidden Optimum Solutions A Tutorial on Integer Programming The linear programming FAQ Linear Programming Survey OR/MS Today Linear Programming: Guide to Formulation, Simplex Algorithm, Goal Programming and Excel Solver examples George Dantzig Benchmark de différents logiciels sur différentes instances de PLNELogiciels AIMMS Optimization Modeling AIMMS &mdash; include linear programming in industry solutions (free trial license available); CGAL &mdash; The Computational Geometry Algorithms Library includes a linear solver, which is exact and optimized for problems with few constraints or few variables COIN-OR &mdash; COmputational INfrastructure for Operations Research, open-source library Cplex &mdash; Commercial library for linear programming DecisionPro Linear Programming Optimization Software GNU Linear Programming Kit, Bibliothèque libre  pour la programmation linéaire, méthode du simplex, du point intérieur... GIPALS &mdash; Linear programming environment and dynamic link library (DLL) HOPDM &mdash; Higher Order Primal Dual Method LINDO &mdash; LP, IP, Global solver/modeling language Linear programming and linear goal programming A freeware program for MS-DOS MOSEK &mdash; Optimization software for LP,IP,QP,SOCP and MIP. Free trial is available. Free for students. Mathematica &mdash; General technical computing system includes large scale linear programming support Microarray Data Classification Server (MDCS) based on linear programming Optimj OptimJ is an extension of the Java programming language with language support for writing optimization models and powerful abstractions for bulk data processing. Orstat2000 &mdash; Includes easy-to-use modules for linear and integer programming (free for educational purposes). Premium Solver &mdash; Spreadsheet add-in QSopt Optimization software for LP (free for research purposes). R Logiciel libre de calcul statistique contenant des librairies aditionnelles pour la PL: glpk, linprog (simplex), Rglpk (interface R pour ) Simplex Method Tool A quick-loading web page What's Best! &mdash; Spreadsheet add-in Xpress-MP &mdash; Optimization software free to students IMSL &mdash; implémentations pour Fortran, C/C++, Java et C#Catégorie:Optimisation Catégorie:Recherche opérationnelle catégorie:Optimisation combinatoireaf:Lineêre programmering bs:Linearno programiranje ca:Programació lineal cs:Lineární programování de:Lineare Optimierung en:Linear programming es:Programación lineal fa:برنامه‌ریزی خطی he:תכנון לינארי hu:Lineáris optimalizálás id:Pemrograman linier it:Programmazione lineare ja:線形計画問題 ko:선형 계획법 nl:Lineair programmeren pl:Programowanie liniowe pt:Programação linear ru:Линейное программирование scn:Prugrammazzioni liniàri sl:Linearno programiranje sr:Линеарно програмирање th:กำหนดการเชิงเส้น tr:Doğrusal Programlama uk:Лінійне програмування ur:لکیری برمجہ vi:Quy hoạch tuyến tính zh:线性规划