These include:It is always at least the difference of the sizes of the two strings.It is at most the length of the longer string.It is zero if and only if the strings are identical.If the strings are the same size, the Hamming distance is an upper bound on the Levenshtein distance.See also agrepBitap algorithmDamerau-Levenshtein distancediffDynamic time warpingFuzzy string searchingHamming distanceHamming weightJaccard indexJaro-Winkler distanceLevenshtein automatonLongest common subsequence problemLucene (an open source search engine that implements edit distance.)Manhattan distanceMetric spaceNeedleman-Wunsch algorithmSimilarity (mathematics)Similarity space on Numerical taxonomySmith-Waterman algorithmSørensen similarity indexReferencesExternal linksThe description of Levenshtein algorithmHighly optimized C# implementation (uses GNU's levenshtein.c as source and makes heavy use of C#'s pointer arithmetics capability)Java, C++ and VB implementations of the algorithmNIST's Dictionary of Algorithms and Data Structures: Levenshtein DistanceLevenshtein Distance visualizedInbuilt function in PHP, and example implementationContinuous variants, spike train metrics, and applications to neurophysiologyBWPGazetteer: an implementation of Levenshtein Distance in Java within the GATE (General Architecture for Text Engineering) framework for Natural Language Processing and Information Extraction.py-editdist: Python module implementation of Levenshtein Edit Distance between two strings.Category:Algorithms on strings Category:Discrete mathematics Category:String similarity measures Category:Dynamic programmingaf:Levenshteinafstand de:Levenshtein-Distanz es:Distancia de Levenshtein fr:Distance de Levenshtein it:Distanza di Levenshtein lv:Levenšteina attālums nl:Levenshteinafstand ja:レーベンシュタイン距離 nn:Levenshtein-distanse pl:Odległość Levenshteina pt:Distância Levenshtein ru:Расстояние Левенштейна sr:Левенштајново растојање fi:Levenšteinin etäisyys tg:Масофаи Левенштейн uk:Відстань Левенштейна vi:Khoảng cách Levenshtein zh:編輯距離
