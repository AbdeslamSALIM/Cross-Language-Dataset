PostgreSQL es un sistema de gestión de base de datos relacional orientada a objetos de software libre, publicado bajo la licencia BSD.Como muchos otros proyectos open source, el desarrollo de PostgreSQL no es manejado por una sola compañía sino que es dirigido por una comunidad de desarrolladores y organizaciones comerciales las cuales trabajan en su desarrollo. Dicha comunidad es denominada el PGDG (PostgreSQL Global Development Group).HistoriaPostgreSQL ha tenido una larga evolución, comenzando con el proyecto Ingres en la Universidad de Berkeley. Este proyecto, liderado por Michael Stonebraker, fue uno de los primeros intentos en implementar un motor de base de datos relacional. Después de haber trabajado un largo tiempo en Ingres y de haber tenido una experiencia comercial con el mismo, Michael decidió volver a la Universidad para trabajar en un nuevo proyecto sobre la experiencia de Ingres, dicho proyecto fue llamado post-ingres o simplemente POSTGRES.El proyecto post-ingres pretendía resolver los problemas con el modelo de base de datos relacional que habían sido aclarados a comienzos de los años 1980. El principal de estos problemas era la incapacidad del modelo relacional de comprender "tipos", es decir, combinaciones de datos simples que conforman una única unidad. Actualmente estos son llamados objetos. Se esforzaron en introducir la menor cantidad posible de funcionalidades para completar el soporte de tipos. Estas funcionalidades incluían la habilidad de definir tipos, pero también la habilidad de describir relaciones - las cuales hasta ese momento eran ampliamente utilizadas pero mantenidas completamente por el usuario. En POSTGRES la base de datos «comprendía» las relaciones y podía obtener información de tablas relacionadas utilizando reglas.La siguiente lista muestra los hitos más importantes en la vida del proyecto POSTGRES.1986: se publicaron varios papers que describían las bases del sistema.1988: ya se contaba con una versión utilizable.1989: el grupo publicaba la versión 1 para una pequeña comunidad de usuarios.1990: se publicaba la versión 2 la cual tenía prácticamente reescrito el sistema de reglas.1991: publicación de la versión 3, esta añadía la capacidad de múltiples motores de almacenamiento.1993: crecimiento importante de la comunidad de usuarios, la cual demandaba más características.1994: antes de la publicación de la versión 4, el proyecto terminó y el grupo se disolvió.Después de que el proyecto POSTGRES terminara, dos graduados de la universidad, Andrew Yu y Jolly Chen, comenzaron a trabajar sobre el código de POSTGRES, esto fue posible dado que POSTGRES estaba licenciado bajo la BSD, y lo primero que hicieron fue añadir soporte para el lenguaje SQL a POSTGRES, dado que anteriormente contaba con su propio lenguaje de consultas, creando así el sistema al cual denominaron Postgres95.Para el año 1996 se unieron al proyecto personas ajenas a la Universisdad como Marc Fournier, Bruce Momjian y Vadim B. Mikheev quienes comenzaron a trabajar para estabilizar el código de Postgres95.En el año 1996 decidieron cambiar el nombre de Postgres95 de tal modo que refleje la característica del lenguaje SQL y lo terminaron llamando PostgreSQL.Con el pasar del tiempo muchos desarrolladores entusiastas de los motores de base de datos se unieron al proyecto y entre todos comenzaron a incorporar muchas características al motor.CaracterísticasAlgunas de sus principales características son, entre otras:Alta concurrenciaMediante un sistema denominado MVCC (Acceso concurrente multiversión, por sus siglas en inglés) PostgreSQL permite que mientras un proceso escribe en una tabla, otros accedan a la misma tabla sin necesidad de bloqueos. Cada usuario obtiene una visión consistente de lo último a lo que se le hizo commit. Esta estrategia es superior al uso de bloqueos por tabla o por filas común en otras bases, eliminando la necesidad del uso de bloqueos explícitos.Amplia variedad de tipos nativosPostgreSQL provee nativamente soporte para:Números de precisión arbitraria.Texto de largo ilimitado.Figuras geométricas (con una variedad de funciones asociadas)Direcciones IP (IPv4 e IPv6).Bloques de direcciones estilo CIDR.Direcciones MAC.Arrays.Adicionalmente los usuarios pueden crear sus propios tipos de datos, los que pueden ser por completo indizables gracias a la infraestructura GiST de PostgreSQL. Algunos ejemplos son los tipos de datos GIS creados por el proyecto PostGIS.Otras característicasClaves ajenas también denominadas Llaves ajenas o Claves Foráneas (foreign keys).Disparadores (triggers): Un disparador o trigger se define en una acción especifica basada en algo ocurrente dentro de la base de datos. En PostgreSQL esto significa la ejecución de un procedimiento almacenado basado en una determinada acción sobre una tabla específica. Ahora todos los disparadores se definen por seis características:El nombre del trigger o disparadorEl momento en que el disparador debe arrancarEl evento del disparador deberá activarse sobre...La tabla donde el disparador se activaraLa frecuencia de la ejecuciónLa función que podría ser llamadaEntonces combinando estas seis características, PostgreSQL le permitirá crear una amplia funcionalidad a través de su sistema de activación de disparadores (triggers).Vistas.Integridad transaccional.Herencia de tablas.Tipos de datos y operaciones geométricas.FuncionesBloques de código que se ejecutan en el servidor. Pueden ser escritos en varios lenguajes, con la potencia que cada uno de ellos da, desde las operaciones básicas de programación, tales como bifurcaciones y bucles, hasta las complejidades de la programación orientada a objetos o la programación funcional.Los disparadores (triggers en inglés) son funciones enlazadas a operaciones sobre los datos.Algunos de los lenguajes que se pueden usar son los siguientes:Un lenguaje propio llamado [http://plphp.sourceforge.net/ https://www.commandprompt.com/community/plphp/(similar al PL/SQL de oracle).C.C++.Gambas.Java PL/Java web.PL/Perl.plPHP.PL/Python.PL/Ruby.PL/sh.PL/Tcl.PL/Scheme.Lenguaje para aplicaciones estadísticas R por medio de PL/R.PostgreSQL soporta funciones que retornan "filas", donde la salida puede tratarse como un conjunto de valores que pueden ser tratados igual a una fila retornada por una consulta (query en inglés).Las funciones pueden ser definidas para ejecutarse con los derechos del usuario ejecutor o con los derechos de un usuario previamente definido. El concepto de funciones, en otros DBMS, son muchas veces referidas como "procedimientos almacenados" (stored procedures en inglés).Productos alrededor de PostgreSQLEl PGDG solo desarrolla el Motor de Datos y un número pequeño de utilidades, para potenciar el trabajo con PostgreSQL suele ser necesario añadir utilidades externas creadas especialmente para este motor, algunas de estas herramientas son:Alternativas ComercialesGracias a su licencia BSD, se permite la utilización del código para ser comercializado. Uno de los casos ejemplo es la de Enterprise DB (POstgresql Plus), la cual incluye varios agregados y una interfaz de desarrollo basada en Java. Entre otras empresas que utilizan Postgresql para comercializar se encuentra CyberTech (alemania), con su producto CyberCluster.GISPostGISProvee amplio soporte para aplicaciones GIS.ReplicaciónPgClusterReplicación multi maestro.Slony-IReplicación maestro esclavo.PyReplicaReplicación maestro esclavo y multi maestro asincrónica.Herramientas de administraciónPgAdmin3Entorno de escritorio visual.PgAccessEntorno de escritorio visual.PhpPgAdminEntorno web.psqlCliente de consola.Búsqueda de textoFull text searchIncluido en el núcleo a partir de la versión 8.3.Via Tsearch2 y OpenFTS para versiones anteriores a la 8.3.XMLXML/XSLT soporteVia XPath extensiones en la sección contrib.Usuarios destacados.org, .info, .mobi y .aero registros de dominios por AfiliasPostgreSQL affiliates.ORG domain.La American Chemical Society.BASF.IMDb.Skype.TiVo.Penny Arcade.Sony OnlineSony Online opts for open-source database over Oracle.U.S. Departamento de Trabajo.USPS.VeriSign.Pictiger.comWisconsin Circuit Court Access con 6 * 180GB DBs replicados en tiempo real.OpenACS y .LRN.ReferenciasVéase tambiénEnlaces externosSitio web oficial de PostgreSQL.Base de datos basada en PostgreSQL.Comunidad de usuarios y sitio de PostgreSQL de México.Comunidad de usuarios y sitio de PostgreSQL de Perú.Comunidad de usuarios de PostgreSQL de Chile.Comunidad de usuarios de PostgreSQL de Venezuela.Cliente escrito en PHP.Códigos y ejemplos para trabajar con SQL.Categoría:Sistemas de gestión de bases de datos libres Categoría:Software para Linux Categoría:Software para Unixca:PostgreSQL cs:PostgreSQL da:PostgreSQL de:PostgreSQL en:PostgreSQL eu:PostgreSQL fi:PostgreSQL fr:PostgreSQL id:PostgreSQL it:PostgreSQL ja:PostgreSQL ko:PostgreSQL lt:PostgreSQL nl:PostgreSQL no:PostgreSQL pl:PostgreSQL pt:PostgreSQL ro:PostgreSQL ru:PostgreSQL sh:PostgreSQL sk:PostgreSQL sr:PostgreSQL sv:PostgreSQL tr:PostgreSQL uk:PostgreSQL vi:PostgreSQL zh:PostgreSQL